name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      servicePrincipal: ${{ '5a16e934-8d13-408b-b529-e74d8b3e83c5' }}
      servicePrincipalPassword: ${{'a25c356e-355e-492d-9dc7-fd78fccae032' }}
      tenantId: ${{'b0ffe258-28bd-45c7-a0cf-de344ee768f7' }}
      imageRepository: ${{ 'nimaipipelinesjavascriptdocker' }}
      containerRegistry: ${{ 'nimaicontainerregistry.azurecr.io' }}
      tag: ${{ github.run_number }}
      deployer: ${{ github.actor }}
    steps:
      - uses: actions/checkout@v2
      - name: Azure Container Registry Build
        uses: docker/build-push-action@v1.1.0
        with:
          image: ${{ env.imageRepository }}
          username: ${{ env.servicePrincipal }}
          password: ${{ env.servicePrincipalPassword }}
          repository: ${{ env.imageRepository }}
          registry: ${{ env.containerRegistry }}
          dockerfile: ${{ 'app/Dockerfile' }}
          tag_with_sha: ${{ true }}
          #tag: ${{ env.tag }}
      - name: ACR Fetch Repository Manifest
        id: getManifest
        uses: Azure/cli@v1.0.0
        with:
          inlineScript: |
            az login --service-principal -u ${{ env.servicePrincipal }} -p ${{ env.servicePrincipalPassword }} --tenant ${{ env.tenantId }}
            echo "::set-output name=manifest::$(az acr repository show-manifests -n ${{ env.containerRegistry }} --repository ${{ env.imageRepository }} --orderby time_desc --top 1 --out tsv)"
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Run python script
        run: |
          python ttdata_script.py ${{ steps.getManifest.outputs.manifest }} ${{ env.deployer }} ${{ env.imageRepository }}

          

